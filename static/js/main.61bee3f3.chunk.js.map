{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","getPrepearedGoods","goods","sortField","isRevers","prepearedGoods","sort","good1","good2","length","reverse","App","startData","useState","setSortField","reverseField","setReverseField","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGF,SAASC,EAAkBC,EAAOC,EAAWC,GAC3C,IAAIC,EAAiBH,EAErB,OAAQC,GACN,IAAK,WACHE,EAAiBH,EAAMI,OACvB,MAGF,IAAK,SACHD,EAAiBH,EACdI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAYnD,MAJiB,QAAbL,GACFC,EAAeK,UAGVL,EAGF,IAAMM,EAAM,WACjB,IAAMC,EAAS,UAAOZ,GAEtB,EAAkCa,mBAAS,MAA3C,mBAAOV,EAAP,KAAkBW,EAAlB,KACA,EAAwCD,mBAAS,MAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAqBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAA0B,aAAdhB,IAEdiB,QA3Be,WACrBN,EAAa,aAqBT,iCAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAA0B,WAAdhB,IAEdiB,QAjCa,WACnBN,EAAa,WA2BT,4BAUA,wBACEI,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAA6B,OAAjBJ,IAEdK,QAvCQ,WAGdJ,EAF+B,OAAjBD,EAAwB,MAAQ,OAiC1C,qBAUmB,QAAjBA,GAAwC,OAAdZ,EAC1B,wBACEe,KAAK,SACLD,UAAWE,IAAG,SAAU,YAAa,YACrCC,QA1CI,WACZN,EAAa,MACbE,EAAgB,OAqCV,mBAQA,MAIJ,6BACGf,EAAkBW,EAAWT,EAAWY,GAAcM,KAAI,SAAAC,GAAI,OAC7D,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YClHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.61bee3f3.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getPrepearedGoods(goods, sortField, isRevers) {\n  let prepearedGoods = goods;\n\n  switch (sortField) {\n    case 'alphabet': {\n      prepearedGoods = goods.sort();\n      break;\n    }\n\n    case 'length': {\n      prepearedGoods = goods\n        .sort((good1, good2) => good1.length - good2.length);\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  if (isRevers === 'yes') {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nexport const App = () => {\n  const startData = [...goodsFromServer];\n\n  const [sortField, setSortField] = useState(null);\n  const [reverseField, setReverseField] = useState('no');\n\n  const sortByAlphabet = () => {\n    setSortField('alphabet');\n  };\n\n  const sortByLength = () => {\n    setSortField('length');\n  };\n\n  const reverse = () => {\n    const yesNo = reverseField === 'no' ? 'yes' : 'no';\n\n    setReverseField(yesNo);\n  };\n\n  const reset = () => {\n    setSortField(null);\n    setReverseField('no');\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== 'alphabet',\n          })}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== 'length',\n          })}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': reverseField === 'no',\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(reverseField === 'yes' || sortField !== null) ? (\n          <button\n            type=\"button\"\n            className={cn('button', 'is-danger', 'is-light')}\n            onClick={reset}\n          >\n            Reset\n          </button>\n        ) : (\n          ''\n        )}\n      </div>\n\n      <ul>\n        {getPrepearedGoods(startData, sortField, reverseField).map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}